
interface AutoSeededRandomPool {

  void AutoSeededRandomPool();

  VoidPtr getRandomHexStrPtr(long inBufferSize);

};


interface DiffieHellmanClient {

  void DiffieHellmanClient();

	void generateKeys();

	void computeSharedSecretFromHexStrPtr([Const] VoidPtr inDataPtr, long inDataSize);

	VoidPtr getPublicKeyAsHexStrPtr();

	VoidPtr getSharedSecretAsHexStrPtr();

};




interface AesSymmetricCipher
{

  void AesSymmetricCipher();

	void initializeFromHexStrPtr(
		[Const] VoidPtr inKeyPtr,
		long inKeySize,
		[Const] VoidPtr inIvPtr,
		long inIvSize
	);

  VoidPtr encryptFromHexStrPtrAsHexStrPtr(
    [Const] VoidPtr inDataPtr,
    long inDataSize
  );

};



interface AesSymmetricDecipher
{

  void AesSymmetricDecipher();

	void initializeFromHexStrPtr(
		[Const] VoidPtr inKeyPtr,
		long inKeySize,
		[Const] VoidPtr inIvPtr,
		long inIvSize
	);

  VoidPtr decryptFromHexStrPtrAsHexStrPtr(
    [Const] VoidPtr inDataPtr,
    long inDataSize
  );

};

