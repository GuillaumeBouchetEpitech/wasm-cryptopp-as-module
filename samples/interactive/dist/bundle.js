"use strict";class e{_parentElement;constructor(e){this._parentElement=e,this._clear()}makeBorder(e){return`<span style="padding: 10px; margin: 10px; border: 3px solid; border-color: rgb(64, 64, 64); line-height: 5.8;">${e}</span>`}makeColor(e,t){return`<span style="color: rgb(${e[0]}, ${e[1]}, ${e[2]});">${t}</span>`}makeSize(e,t){return`<span style="font-size: ${e}px;">${t}</span>`}alignedLog(e,...t){const i=t.join(" ").split("\n").join("<br>")+"<br>",n=document.createElement("p");n.innerHTML=i,n.style=`text-align: ${e};`,this._parentElement.appendChild(n)}log(...e){this.alignedLog.apply(this,["left",...e])}logLeft(...e){this.alignedLog.apply(this,["left",...e])}logRight(...e){this.alignedLog.apply(this,["right",...e])}logCenter(...e){this.alignedLog.apply(this,["center",...e])}error(...e){this.alignedLog.apply(this,["center","ERR",...e])}_clear(){for(;this._parentElement.firstChild;)this._parentElement.removeChild(this._parentElement.lastChild)}}class t{static _wasmModule;static async load(){var e;await(e="../../build/wasm-cryptopp.js",new Promise(((t,i)=>{const n=document.createElement("script");n.src=e,n.addEventListener("load",t),n.addEventListener("error",i),document.head.appendChild(n)}))),t._wasmModule=await wasmCryptoppJs()}static get(){if(!this._wasmModule)throw new Error("crytpopp wasm module not loaded");return this._wasmModule}}const i=(e,t,i,n)=>{const o=t.length.toString();let r=0;for(;r<t.length;){let a=t.substr(r,i);r>0&&(a=a.padEnd(i,"_"));const s=e.makeColor([128,128,64],a);switch(n){case"left":e.alignedLog(n,` => {${r.toString().padStart(3,"_")} / ${o}} ${s}`);break;case"right":e.alignedLog(n,`${s} {${r.toString().padStart(3,"_")} / ${o}} <= `);break;case"center":e.alignedLog(n,`${s}`)}r+=i}},n=["0xB10B8F96A080E01DDE92DE5EAE5D54EC52C99FBCFB06A3C6","9A6A9DCA52D23B616073E28675A23D189838EF1E2EE652C0","13ECB4AEA906112324975C3CD49B83BFACCBDD7D90C4BD70","98488E9C219A73724EFFD6FAE5644738FAA31A4FF55BCCC0","A151AF5F0DC8B4BD45BF37DF365C1A65E68CFDA76D4DA708","DF1FB2BC2E4A4371"].join(""),o="0xF518AA8781A8DF278ABA4E7D64B7CB9D49462353",r=["0xA4D1CBD5C3FD34126765A442EFB99905F8104DD258AC507F","D6406CFF14266D31266FEA1E5C41564B777E690F5504F213","160217B4B01B886A5E91547F9E2749F4D7FBD7D3B9A92EE1","909D0D2263F80A76A6A24C087A091F531DBF0A0169B6A28A","D662A4D18E73AFA32D779D5918D08BC8858F4DCEF97C2A24","855E6EEB22B3B2E5"].join("");var a;!function(e){e.PlainMessage="PlainMessage",e.EncryptedMessage="EncryptedMessage",e.SecurityRequest="SecurityRequest",e.SecurityResponse="SecurityResponse"}(a||(a={}));const s=e=>"object"==typeof e&&"string"==typeof e.type&&"string"==typeof e.payload;var l;!function(e){e[e.unencrypted=0]="unencrypted",e[e.initiated=1]="initiated",e[e.ready=2]="ready",e[e.confirmed=3]="confirmed"}(l||(l={}));const c=e=>"object"==typeof e&&"string"==typeof e.publicKey&&"string"==typeof e.ivValue;class d{_wasDeleted=!1;_communication;_EncryptedCommunicationState=l.unencrypted;_callbacks=[];_dhClient;_symmetricCipher;_publicKey;_ivValue;_sharedSecret;_onLogging;constructor(e,i){this._communication=e,this._onLogging=i;const n=t.get();this._dhClient=new n.DiffieHellmanClientJs,this._symmetricCipher=new n.AesSymmetricCipherJs,this._communication.onReceive((e=>{this._processReceivedMessage(e)}))}delete(){this._dhClient.delete(),this._symmetricCipher.delete(),this._wasDeleted=!0}_log(e){this._onLogging&&this._onLogging(e)}_processReceivedMessage(e){if(this._wasDeleted)throw new Error("was deleted");const i=JSON.parse(e);if(!s(i))throw new Error("received message structure unrecognized");switch(this._log(`received message, type: "${i.type}"`),i.type){case a.PlainMessage:this._callbacks.forEach((e=>e(i.payload)));break;case a.EncryptedMessage:{this._log("decrypting message");const e=this._symmetricCipher.decryptFromHexStrAsHexStr(i.payload);if(this._EncryptedCommunicationState===l.ready)this._log("connection now confirmed secure"),this._EncryptedCommunicationState=l.confirmed;else if(this._EncryptedCommunicationState!==l.confirmed)throw new Error("was expecting to be in a secure state");const n=t.get().hexToUtf8(e);this._log("message decrypted"),this._callbacks.forEach((e=>e(n)));break}case a.SecurityRequest:{this._log("now securing the connection"),this._EncryptedCommunicationState=l.initiated;const e=JSON.parse(i.payload);if(!c(e))throw new Error("received message security payload unrecognized");this._ivValue=e.ivValue,this._dhClient.generateKeys(n,o,r),this._log("generating public/private keys"),this._publicKey=this._dhClient.getPublicKeyAsHexStr(),this._dhClient.computeSharedSecretFromHexStr(e.publicKey),this._log("computing the shared secret with the received public key"),this._sharedSecret=this._dhClient.getSharedSecretAsHexStr(),this._log("initializing aes symmetric cipher with computed shared secret"),this._symmetricCipher.initializeFromHexStr(this._sharedSecret.slice(0,32),this._ivValue),this._log("sending public key"),this._EncryptedCommunicationState=l.ready,this._communication.send(JSON.stringify({type:a.SecurityResponse,payload:this._publicKey}));break}case a.SecurityResponse:if(this._log("processing received security response"),this._EncryptedCommunicationState!==l.initiated)throw new Error("was expecting a security response");this._log("computing the shared secret with the received public key"),this._dhClient.computeSharedSecretFromHexStr(i.payload),this._sharedSecret=this._dhClient.getSharedSecretAsHexStr(),this._log("initializing aes symmetric cipher with computed shared secret"),this._symmetricCipher.initializeFromHexStr(this._sharedSecret.slice(0,32),this._ivValue),this._log("connection now confirmed secure"),this._EncryptedCommunicationState=l.ready;break;default:throw new Error(`received message type unsupported, type: "${i.type}"`)}}makeSecure(){if(this._wasDeleted)throw new Error("was deleted");this._EncryptedCommunicationState=l.initiated,this._dhClient.generateKeys(n,o,r),this._publicKey=this._dhClient.getPublicKeyAsHexStr();const e=new(t.get().AutoSeededRandomPoolJs);this._ivValue=e.getRandomHexStr(16),e.delete();const i=JSON.stringify({publicKey:this._publicKey,ivValue:this._ivValue});this._communication.send(JSON.stringify({type:a.SecurityRequest,payload:i}))}send(e){if(this._wasDeleted)throw new Error("was deleted");if(this._EncryptedCommunicationState===l.initiated)throw new Error("cannot send while securing the connection");if(this._EncryptedCommunicationState===l.unencrypted)this._log("[unencrypted] sending a message:"),this._log(`[unencrypted] "${e}"`),this._communication.send(JSON.stringify({type:a.PlainMessage,payload:e}));else{this._log("[encrypted] sending a message:"),this._log(`[encrypted] "${e}"`);const i=t.get().utf8ToHex(e),n=this._symmetricCipher.encryptFromHexStrAsHexStr(i);this._communication.send(JSON.stringify({type:a.EncryptedMessage,payload:n}))}}onReceive(e){if(this._wasDeleted)throw new Error("was deleted");this._callbacks.push(e)}get EncryptedCommunicationState(){if(this._wasDeleted)throw new Error("was deleted");return this._EncryptedCommunicationState}}window.onload=async()=>{const n=(e=>{const t=document.querySelector(e);if(!t)throw new Error(`DOM elements not found, id: "${e}"`);return t})("#loggerOutput"),o=new e(n);o.logCenter("page loaded"),o.logCenter(o.makeColor([255,0,0],"\n\nSTART\n\n")),o.logCenter("CrytpoppWasmModule: loading"),await t.load(),o.logCenter("CrytpoppWasmModule: loaded"),(e=>{e.logCenter(e.makeColor([128,128,0],e.makeSize(30,e.makeBorder("Secure Connection Test"))));const t=e.makeColor([192,128,128],"Client A"),n=e.makeColor([128,128,192],"Client B"),o=(t,n)=>{const o=JSON.parse(n);if(s(o)){if(o.type===a.PlainMessage?e.alignedLog(t,e.makeColor([192,64,64],"/!\\ UNENCRYPTED MESSAGE /!\\")):o.type===a.EncryptedMessage?e.alignedLog(t,e.makeColor([64,192,64],"(OK) ENCRYPTED MESSAGE (OK)")):o.type!==a.SecurityRequest&&o.type!==a.SecurityResponse||e.alignedLog(t,e.makeColor([64,192,64],"(OK) NO COMPROMISING INFORMATION SHARED (OK)")),e.alignedLog(t,"type:"),e.alignedLog(t,e.makeColor([192,192,64],`"${o.type}"`)),o.type===a.PlainMessage)e.alignedLog(t,"payload:"),e.alignedLog(t,e.makeColor([192,64,64],e.makeSize(25,`"${o.payload}"`)));else try{const n=JSON.parse(o.payload);c(n)?(e.alignedLog(t,"payload.publicKey:"),i(e,n.publicKey,64,t),e.alignedLog(t,"payload.ivValue:"),i(e,n.ivValue,64,t)):(e.alignedLog(t,"payload:"),i(e,o.payload,64,t))}catch{e.alignedLog(t,"payload:"),i(e,o.payload,64,t)}o.type===a.PlainMessage?e.alignedLog(t,e.makeColor([192,64,64],"/!\\ UNENCRYPTED MESSAGE /!\\")):o.type===a.EncryptedMessage?e.alignedLog(t,e.makeColor([64,192,64],"(OK) ENCRYPTED MESSAGE (OK)")):o.type!==a.SecurityRequest&&o.type!==a.SecurityResponse||e.alignedLog(t,e.makeColor([64,192,64],"(OK) NO COMPROMISING INFORMATION SHARED (OK)"))}else e.alignedLog(t,`"${n}"`)},r=[],l=[i=>{e.alignedLog("left",`SecureClient ${t} received a message`),e.alignedLog("left","\n")}],g={send:i=>{e.alignedLog("left",`SecureClient ${t} sent a message`),e.alignedLog("left","\n"),e.alignedLog("center",`${t} -----\x3e ${n}`),e.alignedLog("center","\n"),o("center",i),e.alignedLog("center","\n"),e.alignedLog("center",`${t} -----\x3e ${n}`),e.alignedLog("center","\n"),r.push(i)},onReceive:e=>{l.push(e)}},h=[],p=[t=>{e.alignedLog("right",`SecureClient ${n} received a message`),e.alignedLog("right","\n")}],m={send:i=>{e.alignedLog("right",`SecureClient ${n} sent a message`),e.alignedLog("right","\n"),e.alignedLog("center",`${t} <----- ${n}`),e.alignedLog("center","\n"),o("center",i),e.alignedLog("center","\n"),e.alignedLog("center",`${t} <----- ${n}`),e.alignedLog("center","\n"),h.push(i)},onReceive:e=>{p.push(e)}};e.logCenter(e.makeBorder("initialize")),e.logLeft(`${t} created`);const y=new d(g,(t=>e.logLeft(t)));y.onReceive((i=>{e.alignedLog("left",`${t} received:`),e.alignedLog("left",e.makeColor([64,192,64],e.makeSize(25,`"${i}"`))),e.alignedLog("left","\n")})),e.logRight(`${n} created`);const u=new d(m,(t=>e.logRight(t)));u.onReceive((t=>{e.alignedLog("right",`${n} received:`),e.alignedLog("right",e.makeColor([64,192,64],e.makeSize(25,`"${t}"`))),e.alignedLog("right","\n")})),e.logCenter(e.makeBorder("[unencrypted] Client A send to Client B")),e.logLeft(`${t} now sending a message:`);const C="Hello, is this safe?";e.alignedLog("left",e.makeColor([64,192,64],e.makeSize(25,`"${C}"`))),e.log("\n"),y.send(C),r.forEach((e=>{p.forEach((t=>t(e)))})),r.length=0,e.logCenter(e.makeBorder("[unencrypted] Client B send to Client A")),e.logRight(`${n} now sending a message:`);const E="Hi, no... it isn't safe...";for(e.alignedLog("right",e.makeColor([64,192,64],e.makeSize(25,`"${E}"`))),e.log("\n"),u.send(E),h.forEach((e=>{l.forEach((t=>t(e)))})),h.length=0,e.logCenter(e.makeBorder("Client A send request for encryption to Client B")),y.makeSecure();0!==r.length||0!==h.length;)r.forEach((e=>{p.forEach((t=>t(e)))})),r.length=0,h.forEach((e=>{l.forEach((t=>t(e)))})),h.length=0;e.logCenter(e.makeBorder("Client B sent a reply for encryption to Client B")),e.logCenter(e.makeBorder("Both Client A and Client B can now encrypt/decrypt each other messages")),e.logCenter(e.makeBorder("[encrypted] Client A send to Client B")),e.logLeft(`${t} now sending a message:`);const _="Let's try again, safe now?";e.alignedLog("left",e.makeColor([64,192,64],e.makeSize(25,`"${_}"`))),e.log("\n"),y.send(_),r.forEach((e=>{p.forEach((t=>t(e)))})),e.logCenter(e.makeBorder("[encrypted] Client B send to Client A")),e.logRight(`${n} now sending a message:`);const S="I'd say we're pretty safe right now :)";e.alignedLog("right",e.makeColor([64,192,64],e.makeSize(25,`"${S}"`))),e.log("\n"),u.send(S),h.forEach((e=>{l.forEach((t=>t(e)))})),y.delete(),u.delete(),e.logCenter(e.makeColor([128,128,0],e.makeSize(30,e.makeBorder("Secure Connection Test"))))})(o),o.logCenter(o.makeColor([255,0,0],"\n\nSTOP\n\n"))};
